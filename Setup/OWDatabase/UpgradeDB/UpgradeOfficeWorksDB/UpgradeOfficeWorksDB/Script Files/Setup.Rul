//===========================================================================
//
//  File Name:    Setup.rul
//
//  Description:  Blank setup main script file
//
//  Comments:     Blank setup is an empty setup project. If you want to
//				  create a new project via. step-by step instructions use the
//				  Project Assistant.
//
//===========================================================================

// Included header files ----------------------------------------------------
#include "ifx.h"

// User Functions
prototype STRING GetConnectionInformation();
prototype ShowSQLErrorMessage(STRING);
prototype ShowFinishDialog(STRING);

// Global Variables
NUMBER 	nSQLError;
STRING 	svDatabaseName,svBackupPath;
STRING 	svServerName,svUserName,svUserPwd,svDriver;
BOOL 	bvBackUpDB,bvCancelBeforeRestore;                   

// Global Constants
#define kDATABASE_NAME					"OW"
#define kDATABASE_VERSION				"v5.0.0"
// OfficeWorks License file
#define kLICENSE_FILE_NAME				"Licenca_Utilizacao_OfficeWorks.rtf"


//---------------------------------------------------------------------------                                                                        
// OnFirstUIBefore
//
// First Install UI Sequence - Before Move Data
//
// The OnFirstUIBefore event is called by OnShowUI when the setup is
// running in first install mode. By default this event displays UI allowing
// the end user to specify installation parameters.
//
// Note: This event will not be called automatically in a
// program...endprogram style setup.
//---------------------------------------------------------------------------
function OnFirstUIBefore()
    number  nResult;
    string  szTitle,szMsg,szText1,szField1,svEdit1;
    string  szBackupPathLocal,szBackupPathNotLocal;
    string  szLicenseFile,szOpt1,szOpt2;
    BOOL	bLicenseAccepted,bvCheck1;
begin	
	// Set setup title
	IFX_SETUP_TITLE = "Actualização da Base de Dados do OfficeWorks - InstallShield Wizard";
	// Beginning of UI Sequence
	Dlg_Start:
	    nResult = 0;
	    // Initialize variables
	    svServerName = "";
	    svUserName = "";
	    svUserPwd = "";
	    svDatabaseName = kDATABASE_NAME;
	    svBackupPath = "";
		bvCheck1 = TRUE;
		bLicenseAccepted = FALSE;
		szLicenseFile = SUPPORTDIR ^ kLICENSE_FILE_NAME;

	// Welcome screen
	Dlg_SdWelcome:
	    szTitle = "Bem-vindo ao assistente de actualização da Base de Dados do OfficeWorks.";
	    szMsg = "O InstallShield Wizard vai actualizar a Base de Dados do OfficeWorks para a versão " + kDATABASE_VERSION + ".\n\nPara continuar faça clique sobre Seguinte.";
	    nResult = SdWelcome(szTitle,szMsg);
	    if(nResult = BACK) goto Dlg_Start;
	
	// License Dialog
	Dlg_SdLicense:
	    szTitle = " ";
	    nResult = SdLicense2Rtf(szTitle,szOpt1,szOpt2,szLicenseFile,bLicenseAccepted);
	    if (nResult = BACK) goto Dlg_SdWelcome;
	
	// Connect to sql server
	Dlg_SQLServer:
	    nResult = OnSQLServerInitialize(nResult);
	   	if(nResult = BACK) goto Dlg_SdLicense;	

    // Get connection info
	GetConnectionInformation();
    
	 // Get OfficeWorks database name
	Dlg_SQLDatabaseName:
	    szTitle = " ";
    	szMsg = "Indique o nome da Base de Dados do OfficeWorks\n\n";
		szField1 = "Nome:";
		nResult = SdShowDlgEdit1(szTitle,szMsg,szField1,svDatabaseName);
		if(nResult = BACK) goto Dlg_SQLServer;

	// Validate if database name is filled
	if(svDatabaseName = "") then
		MessageBox("Não é possível continuar sem indicar o nome da Base de Dados!",WARNING);
		goto Dlg_SQLDatabaseName;        
	endif;      
	
	// Choose if create backup
	Dlg_DBBackup:
		szTitle = " ";
	    szMsg = "É recomendável efectuar um Backup da Base de Dados ante de iniciar a actualização.";
	    szText1 = "Efectuar Backup da Base de Dados";
		SetDialogTitle(DLG_ASK_OPTIONS,szTitle);
		nResult = AskOptions(NONEXCLUSIVE,szMsg,szText1,bvCheck1);
		bvBackUpDB = bvCheck1;
	 	if(nResult = BACK) goto Dlg_SQLDatabaseName;
	
	// Select dir for backup files
	Dlg_DBBackupPath:
		if(bvBackUpDB) then
		    szTitle = " ";
		    if(svServerName != "(Local)") then
		    	szMsg = "Indique a pasta de destino para o backup da Base de Dados do OfficeWorks\n\n";
		    	szMsg = szMsg + "Atenção! A pasta destino deve existir no servidor indicado. (" + svServerName + ")\n";	
				szMsg = szMsg + "(ex: C:\\BaseDados\\Backups)";	
				szField1 = "Pasta Destino:";
				nResult = SdShowDlgEdit1(szTitle,szMsg,szField1,szBackupPathNotLocal);
		  		if(nResult = BACK) goto Dlg_DBBackup;  
		  		StrRemoveLastSlash(svEdit1);
		  		svBackupPath = szBackupPathNotLocal;
		    else
			    szMsg = "Seleccione a pasta de destino para o backup da Base de Dados do OfficeWorks\n\n";
			    nResult = AskDestPath(szTitle,szMsg,szBackupPathLocal,0);
				if(nResult = BACK) goto Dlg_DBBackup;
				svBackupPath = szBackupPathLocal;
		    endif;
			// Validate if backup dir is filled
			if(svBackupPath = "") then
				MessageBox("Não é possível continuar sem indicar a pasta de destino!",INFORMATION);
				goto Dlg_DBBackupPath;        
		  	endif;      
		endif;
	
	// Screen to review install options
	Dlg_SdStartCopy2:
	    szTitle = " ";
	    szMsg = "Clique em Instalar para iniciar a actualização da Base de Dados do OfficeWorks.\n\n"; 
	    szMsg = szMsg + "Se pretende rever ou alterar alguma definição, clique em Anterior.\n\nClique em Cancelar para sair do assistente.";
	    nResult = SdStartCopy2(szTitle,szMsg);
	    if(nResult = BACK) then
	    	if(bvBackUpDB) goto Dlg_DBBackupPath;      
	    	goto Dlg_DBBackup;
      	endif;
    
    // Set values for runtime replacements
    IFX_PRODUCT_URL = svDatabaseName;
    IFX_PRODUCT_COMMENTS = svBackupPath;
    return 0;
end;


//---------------------------------------------------------------------------
// OnSQLComponentInstalled
//
// The SQLComponentInstalled event is called after each component is 
// installed so any SQL scripts attached to that component can be run.
//
// szComponent will have the name of the component that has been installed.
//---------------------------------------------------------------------------
function OnSQLComponentInstalled(szComponent)
	string szError,szMsgDialog;
	number nResult,nErrorType,nLine;
	string szTitle,szMsg,szText1;
	BOOL   bvCheck1;
begin
    if(SQLRTGetBatchMode()) then
        // Queue up the component to run later
        ISSQLServerAddToBatchInstall(szComponent);
    else
        // Control components instalation
        Disable(BACKBUTTON);
        switch(szComponent)
	        // SQL Script to backup OfficeWorks Database
	        case "BackUpOfficeWorksDatabase_SQLComponent":
				if(bvBackUpDB) then
			        nResult = SQLRTComponentInstall(szComponent);
			        if(nResult = SQL_ERROR_ABORT) then
						// Get error message
					    SQLRTGetComponentScriptError(szComponent,szError,nErrorType,nLine);
						ShowSQLErrorMessage(szError);
			            szMsgDialog = "A Actualização da Base de dados não foi concluida com sucesso!";
			            szMsgDialog = szMsgDialog + "\n\n" + "O Backup da Base de Dados não foi concluido com sucesso!";
			            ShowFinishDialog(szMsgDialog);
		            endif;
				endif;
	        // SQL Script to restore OfficeWorks Database
	        case "RestoreOfficeWorksDatabase_SQLComponent":
			    if(bvBackUpDB && nSQLError = SQL_ERROR_ABORT) then
				    szTitle = " ";
				    szMsgDialog = "A Actualização da Base de dados não foi concluida com sucesso!";
				    szMsg = szMsgDialog;
				    szText1 = "Efectuar Restore da Base de Dados";
				    bvCheck1 = FALSE;
					SetDialogTitle(DLG_ASK_OPTIONS,szTitle);
					nResult = AskOptions(NONEXCLUSIVE,szMsg,szText1,bvCheck1);
					if(bvCheck1) then
				        nResult = SQLRTComponentInstall(szComponent);
				        if(nResult = SQL_ERROR_ABORT) then
							// Get error message
						    SQLRTGetComponentScriptError(szComponent,szError,nErrorType,nLine);
							ShowSQLErrorMessage(szError);
				            szMsgDialog = szMsgDialog + "\n\n" + "O Restore da Base de Dados não foi concluido com sucesso!";
				            ShowFinishDialog(szMsgDialog);
			            else
			            	szMsgDialog = szMsgDialog + "\n\n" + "O Restore da Base de Dados foi concluido com sucesso!";
			            	ShowFinishDialog(szMsgDialog);
			            endif;
			        else
			        	szMsgDialog = szMsgDialog + "\n\n" + "O Restore da Base de Dados não foi efectuado por escolha do utilizador!";
			        	ShowFinishDialog(szMsgDialog);
			        endif;
	            else
	            	szMsgDialog = "A Actualização da Base de dados foi concluida com sucesso!";
	            	if(nSQLError = SQL_ERROR_ABORT) then
	            		szMsgDialog = "A Actualização da Base de dados não foi concluida com sucesso!";
	            	endif;
	            	ShowFinishDialog(szMsgDialog);
	            endif; 
	        // Ohter SQL Components and SQL Script to upgrade OfficeWorks Database and o
	        default:
		        if(nSQLError != SQL_ERROR_ABORT) then
			        nResult = SQLRTComponentInstall(szComponent);
			        nSQLError = nResult;
			        if(nResult = SQL_ERROR_ABORT) then
						// Get error message
					    SQLRTGetComponentScriptError(szComponent,szError,nErrorType,nLine);
      					ShowSQLErrorMessage(szError);
					endif;
				endif;    	
		endswitch;
	endif;
end;


//---------------------------------------------------------------------------
// OnCanceling
//
// The OnCanceling event is sent when the installation is cancelled, 
// usually as result of end user clicking Cancel button of a dialog or
// pressing Esc key. Calling Do(EXIT) will also trigger this event.
//---------------------------------------------------------------------------
function OnCanceling()
    STRING szMsgDialog;
begin
    if(IDYES = SprintfBox(MB_YESNO|MB_ICONEXCLAMATION|MB_DEFBUTTON2,SdLoadString(SD_STR_ONCANCELING_TITLE),SdLoadString(SD_STR_ONCANCELING_CONFIRM_MSG))) then
        szMsgDialog = "A actualização da Base de Dados do OfficeWorks foi cancelada pelo utilizador.\n\n\n";
        szMsgDialog = szMsgDialog + "O Sistema não foi modificado.\n\n";
        szMsgDialog = szMsgDialog + "Para actualizar a Base de Dados do OfficeWorks mais tarde, execute novamente o assistente.";
        ShowFinishDialog(szMsgDialog);
    endif;
end;


//---------------------------------------------------------------------------
// GetConnectionInformation
//
// This function will Get connection information
//---------------------------------------------------------------------------
function string GetConnectionInformation()
	LIST    listConn;
	string  szConnection,szDBName;
begin
    listConn = SQLRTGetConnections();
    ListGetFirstString(listConn,szConnection);
    SQLRTGetConnectionInfo(szConnection,svServerName,szDBName,svUserName,svUserPwd);
   	ListDestroy(listConn);
end;
    
    
//---------------------------------------------------------------------------
// ShowSQLErrorMessage
//
// This function will Show error message to user
// --------------------------------------------------------------------------
function ShowSQLErrorMessage(szErrorMsg)
	string szMessage;
begin
    // Load error string
    szMessage = SdLoadString(IDS_IFX_SQL_ERROR_RUN_FAILED) + "\n\n" + szErrorMsg;
    // Display error
    MessageBox(szMessage, SEVERE);
end;


//---------------------------------------------------------------------------
// ShowFinishDialog
//
// This function will Show Finish Screen and end setup
// --------------------------------------------------------------------------
function ShowFinishDialog(szMsgDialog)
	string szTitle,szMsg1,szMsg2,szOpt1,szOpt2;
	BOOL   bvOpt1,bvOpt2;
begin
    // Close the current dialog.
    EndCurrentDialog();
    szTitle = "Actualização da Base de Dados do OfficeWorks";
    szMsg1 = szMsgDialog;    
    if(szMsg1 = "") then
    	szMsg1 = SdLoadString(SD_STR_ONCANCELING_FINISH_MSG1);
    endif;
   	szMsg2 = "Clique em Concluir para terminar o assistente.";    
    szOpt1 = "";
    szOpt2 = "";
    bvOpt1   = FALSE;
    bvOpt2   = FALSE;
    // Display Finish dialog.
    SdFinish(szTitle,szMsg1,szMsg2,szOpt1,szOpt2,bvOpt1,bvOpt2);
    exit;                       
end;

